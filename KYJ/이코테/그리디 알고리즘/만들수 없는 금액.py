# 만들수 없는 금액

# 동네 편의점 주인인 동빈이는 N개의 동전을 가지고 있습니다.
# 이때 N개의 동전을 이용하여 만들수 없는 양의 정수 금액 중 최솟값을 구하는 프로그램을 작성하세요.

# 예를 들어 N = 5이고, 각 동전이 각각 3원, 2원, 1원, 1원, 9원짜리 (화폐 단위) 동전이라고 가정합시다.
# 이때 동빈이가 만들 수 없는 양의 정수 금액 중 최솟값은 8원입니다.

# 또 다른 예시로, N = 3이고, 각 동전이 각각 3원, 5원, 7원 짜리 (화폐 단위) 동전이라고 가정합시다.
# 이때 동빈이가 만들 수 없는 양의 정수 금액 중 최솟값은 1원입니다.


# 입력 조건 : 첫째 줄에는 동전의 개수를 나타내는 양의 정수 N이 주어집니다. ( 1 =< n =< 1,000)
#           둘쨰 줄에는 각 동전의 화폐 단위를 나타내는 N개의 자연수가 주어지며,
#           각 자연수는 공백으로 구분합니다. 이때 각 화폐단위는 1,000,000 이하의 자연수입니다.

# 출력 조건 : 첫째 줄에 주어진 동전들로 만들 수 없는 양의 정수 금액 중 최솟값을 출력합니다.

# 입력 예시 : 5                                         출력 예시 : 8
#           3 2 1 1 9

# 문제 해결 아이디어

# 1. 동전에 대한 정보가 주어졌을 때, 화폐 단위를 기준으로 오름차순 정렬한다.
# 2. 화폐 단위가 작은 순서대로 동전을 확인하며, 현재 확인하는 동전을 이용해 target 금액 또한 만들 수 있는지 확인하면 된다.
# 3. 만약 target 금액을 만들 수 있다면, target 값을 업데이트 하는 (증가 시키는) 방식을 이용한다.

# 예를 들어 3개의 동전이 있고, 각 화폐의 단위가 1, 2, 3 이라고 하자
# 그러면 1부터 6까지 모든 금액을 만들 수 있다.

#   1원 : 1
#   2원 : 2
#   3원 : 3
#   4원 : 1+3
#   5원 : 2+3
#   6원 : 1+2+3

# 마찬가지로 7도 만들수 있는지 확인을 하면 되고, 이때 화폐 단위가 5인 동전 하나가 새롭게 주여졌다고 가정하자
# 화폐 단위가 5인 동전도 주어졌기 떄문에, 1부터 11까지의 모든 금액을 만들 수 있다. (당연히 7도 만들수 있음)

#   1원 : 1
#   2원 : 2
#   3원 : 3
#   4원 : 1+3
#   5원 : 5
#   6원 : 1+5
#   7원 : 2+5
#   8원 : 3+5
#   9원 : 1+3+5
#   10원 : 2+3+5
#   11원 : 1+2+3+5

# 이러한 원리를 이용하면, 단순히 동전을 화폐 단위 기준으로 정렬한 뒤에,
# 화폐 단위가 작은 동전부터 하나씩 확인하면서 target 변수를 업데이트 하는 방식으로 최적의 해를 계산할수 있다.
# 이 문제가 거스름돈 문제와 다른점은 거스름돈 문제는 동전의 개수가 제한이 없지만, 위 문제는 동전의 개수가 제한이 있기 때문에 이를 유의해야한다.

# 풀이

n = int(input())  # 동전의 개수를 나타내는 n
data = list(map(int, input().split()))  # 각 동전의 화폐 단위를 나타내는 자연수
data.sort()  # 화폐의 단위를 담은 리스트를 오름차순으로 정렬

target = 1
for x in data:
    # 만들 수 없는 금액을 찾았을 때 반복 종료
    if target < x:
        break
    target += x

# 만들 수 없는 금액 출력
print(target)
